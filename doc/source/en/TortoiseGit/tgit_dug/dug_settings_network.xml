<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect2 SYSTEM "../../../dtd/dblite.dtd">
<sect2 id="tgit-dug-settings-network">
	<?dbhh topicname="HIDD_SETTINGSPROXY"?>
	<title>Network Settings</title>
	<indexterm>
		<primary>proxy server</primary>
	</indexterm>
	<para>
		<figure id="tgit-dug-settings-dia-4">
			<title>The Settings Dialog, Network Page</title>
			<graphic fileref="../images/SettingsProxy.png"/>
		</figure>
		Here you can configure your proxy server, if you need one to get
		through your company's firewall.
	</para>
	<para>
		The proxy server settings here do only affect Git for Windows (i.e., http and https protocols).
		If you are using OpenSSH/PuTTY/Tortoise(Git)Plink you have to set up the proxy server settings there separately.
		In order to do this, you need the main PuTTY tool, which is not shipped with TortoiseGit. Preferably you
		store the proxy settings to the "Default Settings" configuration there, so that it is applied by default.
	</para>
	<para>
		If you need to set up per-repository proxy settings, you will
		need to use the Git <filename>config</filename> file to
		configure this. Consult <xref linkend="git-config(1)"/> for more details.
	</para>
	<para>
		You can also specify which program TortoiseGit should use to
		establish a secure connection to a git repository which is access using ssh.
		We recommend that you use TortoiseGitPlink.exe. This is a version
		of the popular Plink program, and is included with TortoiseGit,
		but it is compiled as a Windowless app, so you don't get a DOS
		box popping up every time you authenticate.
	</para>
	<para>
		You must specify the full path to the executable. For TortoiseGitPlink.exe
		this is the standard TortoiseGit bin directory. Use the
		<guibutton>Browse</guibutton> button to help locate it, e.g.:
<screen>
"C:\Program Files\TortoiseGit\bin\TortoiseGitPlink.exe"
</screen>
	</para>
	<tip>
		<para>
			If you want to use OpenSSH shipped by Git for Windows/msysGit just enter <filename>ssh.exe</filename>.
		</para>
	</tip>
	<para>
		One side-effect of not having a window is that there is
		nowhere for any error messages to go, so if authentication
		fails you will simply get a message saying something like
		<quote>Unable to write to standard output</quote>.
		For this reason we recommend that you first set up using
		standard Plink. When everything is working, you can use
		TortoiseGitPlink with exactly the same parameters.
	</para>
	<para>
		TortoiseGitPlink does not have any documentation of its own because it
		is just a minor variant of Plink. Find out about command line
		parameters from the
		<ulink url="https://www.chiark.greenend.org.uk/~sgtatham/putty/">
			<citetitle>PuTTY website</citetitle>
		</ulink>
	</para>
	<para>
		To avoid being prompted for a password repeatedly, you might also
		consider using a password caching tool such as Pageant. This is also
		available for download from the PuTTY website or included in the TortoiseGit package. (Also see <xref linkend="tgit-dug-general-auth"/>.)
	</para>
	<para>
		Finally, setting up SSH on clients is a non-trivial process
		which is beyond the scope of this help file. However, you can find a
		guide in the TortoiseGit FAQ listed under
		<xref linkend="tgit-ssh-howto"/>.
	</para>

	<sect3 id="tgit-dug-settings-network-email">
		<title>Email settings</title>
		<?dbhh topicname="HIDD_SETTINGSMTP"?>
		<para>
			<figure id="tgit-dug-settings-network-email-dia-1">
				<title>The Settings Dialog, email settings</title>
				<graphic fileref="../images/SettingsEmail.png"/>
			</figure>
			This page allows you to specify configure how mails should be send.
		</para>
		<variablelist>
			<varlistentry>
				<term>SMTP, directly to destination server</term>
				<listitem>
					<para>
						When this option is selected, TortoiseGit directly connects to the SMTP server(s) (on port 25)
						which is/are responsible for the specific destination email-address(es).
						This is the default for TortoiseGit (unless some different method is configured).
					</para>
					<important>
						<para>
							This might be problematic if your ISP blocks outgoing SMTP connections (port 25) or you have a dialup internet connection.
							In the ladder case some destination MTAs might not accept your mails or mark them as SPAM.
						</para>
					</important>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>MAPI</term>
				<listitem>
					<para>
						When this option is selected, TortoiseGit uses the Microsoft Messaging API (MAPI) for sending mails.
						For this, you need a MAPI capable mail client (e.g. Thunderbird or Outlook).
					</para>
					<important>
						<para>
							If you don't send patches as attachments, you might need to make sure that no auto line wrapping takes place.
							For Thunderbird there is an add-on (<ulink url="https://addons.mozilla.org/de/thunderbird/addon/toggle-word-wrap/"><citetitle>Toggle Word Wrap</citetitle></ulink>) available.
						</para>
					</important>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>use configured server</term>
				<listitem>
					<para>
						This is the recommended way for sending mails. Just enter the same data as in your mail tools (MUA).
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</sect3>
</sect2>
