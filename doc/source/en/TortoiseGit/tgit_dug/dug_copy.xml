<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 SYSTEM "../../../dtd/dblite.dtd">
<sect1 id="tgit-dug-copy">
	<title>Copying/Moving/Renaming Files and Folders</title>
	<indexterm>
		<primary>copy files</primary>
	</indexterm>
	<indexterm>
		<primary>rename files</primary>
	</indexterm>
	<indexterm>
		<primary>move files</primary>
	</indexterm>
	<para>
		It often happens that you already have the files you need in another
		project in your repository, and you simply want to copy them across.
		One way is to simply copy the files and add them as described above manually.
	</para>
	<para>
		The easiest way to copy files and folders from within a working tree is
		to use the right-drag menu. When you <action>right-drag</action> a file
		or folder from one working tree to another, or even within the same
		folder, a context menu appears when you release the mouse.
		<figure id="tgit-dug-copy-right-drag">
			<title>Right drag menu for a directory under version control</title>
			<graphic fileref="../images/RightDragMenu.png"/>
		</figure>
		Now you can copy existing versioned content to a new location, possibly
		renaming it at the same time.
	</para>
<!--
	<para>
		You can also copy or move versioned files within a working tree, or between two
		working trees, using the familiar cut-and-paste method. Use the standard Windows
		<action>Copy</action> or <action>Cut</action> to copy one or more versioned items
		to the clipboard. If the clipboard contains such versioned items, you can then use
		<menuchoice>
			<guimenu>TortoiseGit</guimenu>
			<guimenuitem>Paste</guimenuitem>
		</menuchoice>
		(note: not the standard Windows <action>Paste</action>)
		to copy or move those items to the new working tree location.
	</para>
-->
	<para>
		In order to get older versions of a file you can use the repository browser to locate content you want,
		and copy it into your working tree directly from the repository,
		or copy between two locations within the repository.
		Refer to <xref linkend="tgit-dug-repobrowser"/> to find out more.
	</para>

	<tip>
		<title>Cannot copy between repositories</title>
		<para>
			Whilst you can copy and files and folders <emphasis>within</emphasis>
			a repository, you <emphasis>cannot</emphasis> copy or move from one
			repository to another while preserving history using TortoiseGit.
			Not even if the repositories live on the same server. All you can
			do is copy the content in its current state and add it as new
			content to the second repository.
		</para>
	</tip>
	<important>
		<title>Git only tracks content</title>
		<para>
			As Git only tracks content, it is not necessary to explicitly record copies or moves as in version control systems like Subversion. Git automatically detects copies/renames/moves based on the file contents when calculating the log.
		</para>
	</important>
</sect1>
